---
title: 前端单元测试(框架和工具)
tags: 前端,单元测试,karma
grammar_cjkRuby: true
---


#### 1.定义
每个单元测试就是一段用于测试一个模块或接口是否能达到预期结果的代码。
#### 2.目的
确认某段代码或模块或接口是否适合使用。
#### 3.测试框架

1. Jasmine
在业内较为流行,功能很全面，自带asssert、mock功能，且不依赖于任何框架，所以适用于所有的Javascript代码。
2. Qunit
比Jasmine的过程化的等待更自由一些，但对于Function的跟踪测试，Qunit似乎完全没有考虑。需要用另外一个测试框架为Qunit带来的插件 “sinon-qunit” 。
3. Sinon
Sinon并不是一个典型的单元测试框架，更像一个库，极大的弥补了Qunit的不足，通常会使用Qunit+Sinon来进行单元测试。
4. Mocha
具有很强的灵活性，可以选择自己喜欢的断言库，选择测试结果的report。
5. intern

#### 4.测试工具
1. JSTD（Javascript Test Driver）
是一个最早的C/S测试工具,已经慢慢不再活跃。
2. Karma
一次可以在多个浏览器及设备中进行测试，并控制浏览器行为和测试报告。它不支持Nodejs的测试。
3. TestSwarm 
所有测试环境由服务器提供，包括各种版本的主流浏览器以及iOS5的iphone设备，不过目前加入已经受限。
4. Buster 
目前还在Beta测试中，很多bug而且不能很好的兼容Windows系统。

#### 5.单元测试用例 
1.TDD
一句话简单来说，就是先写测试，后写功能实现。TDD的目的是通过测试用例来指引实际的功能开发，让开发人员首先站在全局的视角来看待需求。互联网的开发环境下，不适合。但是当我们写组件、工具方法、类库的时候，TDD就可以得到很好地使用。
2.BDD
行为驱动开发，BDD是由商业价值来驱动，通过用户接口(例如GUI)理解应用程序。
